languagesystem DFLT dflt;

@cons = @cligno_aamatra;
@matras = [aamatra imatra iimatra umatra uumatra eematra aimatra oomatra aumatra];

# For debugging the string "RenderingUnknown" will be rendered as "RenderingOpenType"
# if the app is using OpenType to render the text.
lookup FontCheck_Unknow {
  lookupflag IgnoreMarks;
    sub [U n k o w ] by [O p e T y];
} FontCheck_Unknow;

lookup FontCheck_n {
  lookupflag IgnoreMarks;
    sub n by p e;
} FontCheck_n;

lookup FontCheck {
  lookupflag IgnoreMarks;
    sub [R] e n d e r i n g
      U' lookup FontCheck_Unknow
      n' lookup FontCheck_Unknow
      k' lookup FontCheck_Unknow
      n'
      o' lookup FontCheck_Unknow
      w' lookup FontCheck_Unknow
      n' lookup FontCheck_n;
} FontCheck;

lookup OnePass {
  lookupflag 0;
    sub @cno_half' virama' by @c_half;
    sub @cligno_anusvara' anusvara' by @clig_anusvara;
    sub @cligno_aamatra' aamatra' by @clig_aamatra;
    sub @cligno_imatra' imatra' by @clig_imatra;
    sub @cligno_aamatra' @cOmatras by @clig_aamatra;
    sub @clig_aamatra @cOmatras' by @cEmatras;
    # we don't need these ligatures at all
    # sub @cligno_oomatra' oomatra' by @clig_oomatra;
    # sub @cligno_aumatra' aumatra' by @clig_aumatra;
    sub @cno_half' aamatra by @c_half;
} OnePass;

lookup RightGuard {
do  for c = @cons;
    for m = @matras;
    let v = (ADVx(m) - APx(m, "_M")) - (ADVx(c) - APx(c, "M"));
    if v > 0; {
        pos $c' $v $m;
      }
} RightGuard;

# lookup lAPs {
#   lookupflag 0;
#     pos base @L mark @_L;
# } lAPs;

lookup mAPs {
  lookupflag 0;
    pos base @M mark @_M;
} mAPs;

lookup urAPs {
  lookupflag 0;
    pos base @UR mark @_UR;
} urAPs;

feature ccmp {
    lookup FontCheck;
    lookup OnePass;
} ccmp;

feature kern {
    lookup RightGuard;
} kern;

feature mark {
    # lookup lAPs;
    lookup mAPs;
    lookup urAPs;
} mark;

table GDEF {
    GlyphClassDef @GDEF_bases, , @GDEF_marks, ;
} GDEF;
